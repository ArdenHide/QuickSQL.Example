// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversalAPI.Example.DBModel;

namespace UniversalAPI.Example.Migrations
{
    [DbContext(typeof(APIContext))]
    partial class APIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UniversalAPI.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JoinCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectedColumns")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectedTables")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("APIRequests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            JoinCondition = "SignUp.Address = LeaderBoard.Owner",
                            Name = "mysignup",
                            SelectedColumns = "SignUp.PoolId, LeaderBoard.Rank, LeaderBoard.Owner, LeaderBoard.Amount",
                            SelectedTables = "SignUp, LeaderBoard"
                        },
                        new
                        {
                            Id = 2,
                            Name = "wallet",
                            SelectedColumns = "*",
                            SelectedTables = "Wallets"
                        },
                        new
                        {
                            Id = 3,
                            Name = "tokenbalanse",
                            SelectedColumns = "Token, Owner, Amount",
                            SelectedTables = "TokenBalances"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
